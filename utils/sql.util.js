function getSqlPertayaan() {
    let sql = "";
    sql += " WITH question AS (";
    sql += "     SELECT * ";
    sql += "     FROM m_question";
    sql += "     WHERE YEAR = 2023 AND visible AND active";
    sql += " ),";
    sql += " reason_1 AS (";
    sql += "     SELECT";
    sql += "         m_reason.id id_reason,";
    sql += "         pv_reason_optional_1.id id_pv_reason_optional,";
    sql += "         pv_reason_optional_1.id_question,";
    sql += "         m_reason.name";
    sql += "     FROM pv_reason_optional_1";
    sql += "     JOIN m_reason ON pv_reason_optional_1.id_reason = m_reason.id";
    sql += "     WHERE pv_reason_optional_1.visible";
    sql += "     AND pv_reason_optional_1.active";
    sql += "     AND m_reason.visible";
    sql += "     AND m_reason.active";
    sql += " ),";
    sql += " reason_2 AS (";
    sql += "     SELECT";
    sql += "         m_reason.id id_reason,";
    sql += "         pv_reason_optional_2.id id_pv_reason_optional,";
    sql += "         pv_reason_optional_2.id_question,";
    sql += "         m_reason.name";
    sql += "     FROM pv_reason_optional_2";
    sql += "     JOIN m_reason ON pv_reason_optional_2.id_reason = m_reason.id";
    sql += "     WHERE pv_reason_optional_2.visible";
    sql += "     AND pv_reason_optional_2.active";
    sql += "     AND m_reason.visible";
    sql += "     AND m_reason.active";
    sql += " ),";
    sql += " reason_3 AS (";
    sql += "     SELECT";
    sql += "         m_reason.id id_reason,";
    sql += "         pv_reason_optional_3.id id_pv_reason_optional,";
    sql += "         pv_reason_optional_3.id_question,";
    sql += "         m_reason.name";
    sql += "     FROM pv_reason_optional_3";
    sql += "     JOIN m_reason ON pv_reason_optional_3.id_reason = m_reason.id";
    sql += "     WHERE pv_reason_optional_3.visible";
    sql += "     AND pv_reason_optional_3.active";
    sql += "     AND m_reason.visible";
    sql += "     AND m_reason.active";
    sql += " ),";
    sql += " reason_4 AS (";
    sql += "     SELECT";
    sql += "         m_reason.id id_reason,";
    sql += "         pv_reason_optional_4.id id_pv_reason_optional,";
    sql += "         pv_reason_optional_4.id_question,";
    sql += "         m_reason.name";
    sql += "     FROM pv_reason_optional_4";
    sql += "     JOIN m_reason ON pv_reason_optional_4.id_reason = m_reason.id";
    sql += "     WHERE pv_reason_optional_4.visible";
    sql += "     AND pv_reason_optional_4.active";
    sql += "     AND m_reason.visible";
    sql += "     AND m_reason.active";
    sql += " ),";
    sql += " question_optional AS (";
    sql += "     SELECT";
    sql += "         id,";
    sql += "         jsonb_agg(";
    sql += "             jsonb_build_object(";
    sql += "                 'desc', optional_1,";
    sql += "                 'opsi', value_optional_1,";
    sql += "                 'reason',";
    sql += "                     (";
    sql += "                         SELECT";
    sql += "                             jsonb_agg(";
    sql += "                                 jsonb_build_object('id_reason', id_reason, 'desc', reason_1.name)";
    sql += "                             )";
    sql += "                         FROM reason_1";
    sql += "                         WHERE reason_1.id_question = question.id";
    sql += "                     )";
    sql += "             )";
    sql += "         ) || jsonb_agg(";
    sql += "             jsonb_build_object(";
    sql += "                 'desc', optional_2,";
    sql += "                 'opsi', value_optional_2,";
    sql += "                 'reason',";
    sql += "                     (";
    sql += "                         SELECT";
    sql += "                             jsonb_agg(";
    sql += "                                 jsonb_build_object('id_reason', id_reason, 'desc', reason_2.name)";
    sql += "                             )";
    sql += "                         FROM reason_2";
    sql += "                         WHERE reason_2.id_question = question.id";
    sql += "                     )";
    sql += "             )";
    sql += "         ) || jsonb_agg(";
    sql += "             jsonb_build_object(";
    sql += "                 'desc', optional_3,";
    sql += "                 'opsi', value_optional_3,";
    sql += "                 'reason',";
    sql += "                     (";
    sql += "                         SELECT";
    sql += "                             jsonb_agg(";
    sql += "                                 jsonb_build_object('id_reason', id_reason, 'desc', reason_3.name)";
    sql += "                             )";
    sql += "                         FROM reason_3";
    sql += "                         WHERE reason_3.id_question = question.id";
    sql += "                     )";
    sql += "             )";
    sql += "         ) || jsonb_agg(";
    sql += "             jsonb_build_object(";
    sql += "                 'desc', optional_4,";
    sql += "                 'opsi', value_optional_4,";
    sql += "                 'reason',";
    sql += "                     (";
    sql += "                         SELECT";
    sql += "                             jsonb_agg(";
    sql += "                                 jsonb_build_object('id_reason', id_reason, 'desc', reason_4.name)";
    sql += "                             )";
    sql += "                         FROM reason_4";
    sql += "                         WHERE reason_4.id_question = question.id";
    sql += "                     )";
    sql += "             )";
    sql += "         ) AS pilihans";
    sql += "     FROM question";
    sql += "     GROUP BY id";
    sql += " )";
    sql += " SELECT";
    sql += "     question.id,";
    sql += "     question.description,";
    sql += "     question_optional.pilihans";
    sql += " FROM question";
    sql += " JOIN question_optional ON question.id = question_optional.id";
    sql += " ORDER BY question.id";
    return sql;
}
function getSqlIkm() {
    let sql = "";
    sql += " WITH rekap_triwulan AS (";
    sql += "     SELECT";
    sql += "         d.name AS nama_element,";
    sql += "         count(c.id_element) jumlah_unsur,";
    sql += "         sum(c.value) jumlah_nilai_paramater,";
    sql += "         sum(c.value) / count(c.id_element) :: decimal nilai_rata_rata_parameter,";
    sql += "         (sum(c.value) / count(c.id_element) :: decimal) * 0.11 nilai_indeks_parameter";
    sql += "     FROM";
    sql += "         j_user a";
    sql += "         JOIN j_questionnaire b ON a.id = b.created_by_user_id";
    sql += "         JOIN pv_questionnaire c ON b.id = c.id_questionnaire";
    sql += "         JOIN m_element d ON c.id_element = d.id";
    sql += "     WHERE";
    sql += "         date_part('year', a.created_at) = [TAHUN]";
    sql += "         AND date_part('month', a.created_at) BETWEEN [MINBULAN] AND [MAXBULAN]";
    sql += "     GROUP BY";
    sql += "         nama_element";
    sql += " )";
    sql += " SELECT [TAHUN] as tahun,";
    sql += "        'Triwulan '|| '[TRIWULAN]' as triwulan,";
    sql += "         sum(nilai_indeks_parameter) as nilai_ikm,";
    sql += "         CASE";
    sql += "             WHEN sum(nilai_indeks_parameter) BETWEEN 0.00";
    sql += "             AND 1.75 THEN 'Tidak Baik'";
    sql += "             WHEN sum(nilai_indeks_parameter) BETWEEN 1.76";
    sql += "             AND 2.50 THEN 'Kurang Baik'";
    sql += "             WHEN sum(nilai_indeks_parameter) BETWEEN 2.51";
    sql += "             AND 3.25 THEN 'Baik'";
    sql += "             ELSE 'Sangat Baik'";
    sql += "         END as status_ikm,";
    sql += "         sum(nilai_indeks_parameter) * 25 as nilai_skm,";
    sql += "         CASE";
    sql += "             WHEN sum(nilai_indeks_parameter) * 25 BETWEEN 0.00";
    sql += "             AND 64.99 THEN 'Tidak Baik'";
    sql += "             WHEN sum(nilai_indeks_parameter) * 25 BETWEEN 65.00";
    sql += "             AND 76.60 THEN 'Kurang Baik'";
    sql += "             WHEN sum(nilai_indeks_parameter) * 25 BETWEEN 76.61";
    sql += "             AND 88.30 THEN 'Baik'";
    sql += "             ELSE 'Sangat Baik'";
    sql += "         END as status_skm,";
    sql += "         jsonb_agg(";
    sql += "             json_build_object(";
    sql += "                 'element',";
    sql += "                 nama_element,";
    sql += "                 'nilai_rata_rata_parameter',";
    sql += "                 nilai_rata_rata_parameter,";
    sql += "                 'indeks',";
    sql += "                 CASE";
    sql += "                     WHEN nilai_rata_rata_parameter BETWEEN 1.00";
    sql += "                     AND 1.75 THEN 'Tidak Baik'";
    sql += "                     WHEN nilai_rata_rata_parameter BETWEEN 1.76";
    sql += "                     AND 2.50 THEN 'Kurang Baik'";
    sql += "                     WHEN nilai_rata_rata_parameter BETWEEN 2.51";
    sql += "                     AND 3.25 THEN 'Baik'";
    sql += "                     ELSE 'Sangat Baik'";
    sql += "                 END";
    sql += "             )";
    sql += "         ) as data";
    sql += " FROM";
    sql += "     rekap_triwulan;";
    return sql;
}
function getSqlFrontOffices() {
    let sql = "";
    sql += " SELECT id, username FROM j_customer ";
    sql += " WHERE visible ";
    sql += " AND active ";
    sql += " ORDER BY id ";
    return sql;
}
module.exports = {
    getSqlPertayaan,
    getSqlIkm,
    getSqlFrontOffices
}